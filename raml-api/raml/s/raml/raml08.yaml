#%RAML 0.8
title: STARTUP API
version: "1.0"
baseUri: "http://api.startupsass.com/"
schemas: 
    - 
        topic: '{"type":"object","$schema":"http://json-schema.org/draft-03/schema#","title":"topic","properties":{"id":{"type":"string","required":false,"title":"id"},"title":{"type":"string","required":false,"title":"title"},"image":{"type":"string","required":false,"title":"image"},"desc":{"type":"string","required":false,"title":"desc"},"status":{"type":"string","required":false,"title":"status"}}}'
    - 
        topics: '{"type":"object","$schema":"http://json-schema.org/draft-03/schema#","description":"主题集合","title":"topics"}'
    - 
        post: '{"type":"object","$schema":"http://json-schema.org/draft-03/schema#","title":"post","properties":{"id":{"type":"string","required":false,"title":"id"},"createTime":{"type":"string","required":false,"title":"createTime"},"status":{"type":"string","required":false,"title":"status"}}}'
    - 
        posts: '{"type":"object","$schema":"http://json-schema.org/draft-03/schema#","title":"posts"}'
    - 
        publisher: '{"type":"object","$schema":"http://json-schema.org/draft-03/schema#","title":"publisher","properties":{"id":{"type":"integer","required":false,"title":"id"},"name":{"type":"string","required":false,"title":"name"}}}'
    - 
        poster: '{"type":"object","$schema":"http://json-schema.org/draft-03/schema#","title":"poster","properties":{"id":{"type":"integer","required":false,"title":"id"},"name":{"type":"string","required":false,"title":"name"},"image":{"type":"string","required":false,"title":"image"},"level":{"type":"string","required":false,"title":"level"}}}'
    - 
        content: '{"type":"object","$schema":"http://json-schema.org/draft-03/schema#","title":"content","properties":{"title":{"type":"string","required":false,"title":"title"}}}'
    - 
        contentDetail: '{"type":"object","$schema":"http://json-schema.org/draft-03/schema#","title":"contentDetail","properties":{"contentText":{"type":"string","required":false,"title":"contentText"},"contentImage":{"type":"string","required":false,"title":"contentImage"}}}'
    - 
        fans: '{"type":"object","$schema":"http://json-schema.org/draft-03/schema#","title":"fans","properties":{"id":{"type":"integer","required":false,"title":"id"},"name":{"type":"string","required":false,"title":"name"},"image":{"type":"string","required":false,"title":"image"}}}'
    - 
        follow: '{"type":"object","$schema":"http://json-schema.org/draft-03/schema#","title":"follow","properties":{"topicId":{"type":"integer","required":false,"title":"topicId"}}}'
    - 
        liker: '{"type":"object","$schema":"http://json-schema.org/draft-03/schema#","title":"liker","properties":{"id":{"type":"integer","required":false,"title":"id"},"name":{"type":"string","required":false,"title":"name"},"image":{"type":"string","required":false,"title":"image"}}}'
    - 
        like-update: '{"type":"object","$schema":"http://json-schema.org/draft-03/schema#","title":"like-update","properties":{"postId":{"type":"integer","required":false,"title":"postId"},"action":{"type":"object"}}}'
    - 
        review: '{"type":"object","$schema":"http://json-schema.org/draft-03/schema#","title":"review","properties":{"id":{"type":"integer","required":false,"title":"id"},"content":{"type":"string","required":false,"title":"content"}}}'
    - 
        reviewer: '{"type":"object","$schema":"http://json-schema.org/draft-03/schema#","title":"reviewer","properties":{"id":{"type":"integer","required":false,"title":"id"},"name":{"type":"string","required":false,"title":"name"}}}'
    - 
        error-schema: '{"type":"object","$schema":"http://json-schema.org/draft-03/schema#","description":"错误，请求错误时返回","title":"error-schema","properties":{"errorCode":{"type":"number","required":false,"title":"errorCode"},"message":{"type":"string","required":false,"title":"message"},"requestId":{"type":"string","required":false,"title":"requestId"},"status":{"type":"number","required":false,"title":"status"},"timestamp":{"type":"number","required":false,"title":"timestamp"}}}'
    - 
        update: '{"type":"object","$schema":"http://json-schema.org/draft-03/schema#","title":"update","properties":{"updateObjectId":{"type":"integer","required":false,"title":"updateObjectId"},"result":{"type":"object","properties":{"updateResultEnum":{"type":"boolean","required":false,"title":"updateResultEnum"}}},"updateTime":{"type":"string","required":false,"title":"updateTime"}}}'
securitySchemes: 
    - 
        oauth_2_0: 
            description: |
                系统支持 OAuth 2.0 来验证所有的APIs
            type: OAuth 2.0
            settings: 
                authorizationUri: "https://www.startupsass.com/1/oauth2/authorize"
                accessTokenUri: "https://api.startupsass.com/1/oauth2/token"
                authorizationGrants: [code]
    - 
        oauth_2_0_2: 
            description: |
                系统支持 OAuth 2.0 来验证所有的APIs
            type: OAuth 2.0
            settings: 
                authorizationUri: "https://www.startupsass.com/1/oauth2/authorize"
                authorizationGrants: [token]
securedBy: 
    - 
        oauth_2_0
    - 
        oauth_2_0_2
/topics/~{field_selectors}: 
    uriParameters: 
        field_selectors: 
            displayName: field_selectors
            description: |
                很多资源允许你指定想要返回的字段。我们称这种语法结构为字段选择器。通过准确的指出你需要的信息，我们可以优化返回结果花费的时间。
                这样也能减少传输的数据。这两点让我们的APIs快速且高效，这是任何一个web应用程序的关键点，对于其他任何依赖外部API的人来说更是如此。
                
                Example
                --------
                如果想要获得people先关的id,first-name,last-name,industry可以这样使用:
                  `http://api.startupsass.com/v1/people/~:(id,first-name,last-name,industry)`
                
                或者:
                  `http://api.startupsass.com/v1/people/~/connections:(id,first-name,last-name,industry)`
                
                字段选择器可以选择成员对象中的字段:
                  `http://api.startupsass.com/v1/people/~/connections:(id,first-name,last-name,positions:(title))`
            type: string
            required: false
            repeat: false
    get: 
        headers: 
            x-la-authorization: 
                displayName: x-la-authorization
                description: |
                    使用 oauth2.0 的方式获取access_token
                type: string
                required: false
                repeat: false
            x-la-format: 
                displayName: x-la-format
                description: |
                    自定义header字段，标识响应结果的格式。 枚举类型：[json]
                type: string
                required: false
                repeat: false
            x-la-app-key: 
                displayName: x-la-app-key
                description: |
                    系统分配的app_key
                type: string
                required: false
                repeat: false
            x-la-sign-method: 
                displayName: x-la-sign-method
                description: |
                    系统参数签名方式
                type: string
                required: false
                repeat: false
        queryParameters: 
            keywords: 
                displayName: keywords
                type: string
                required: false
                repeat: false
            count: 
                displayName: count
                description: Maximum
                type: integer
                required: false
                repeat: false
                example: "10"
            start: 
                displayName: start
                description: The offset by which to start Network Update pagination
                type: integer
                required: false
                repeat: false
                example: "0"
            sign: 
                displayName: sign
                description: |
                    经过校验后生成值
                type: string
                required: false
                repeat: false
        responses: 
            "200": 
                description: |
                    请求成功
                body: 
                    application/json: 
                        schema: topics
                        example: "{}"
            "400": 
                description: |
                    请求格式不正确
                body: 
                    application/json: 
                        schema: error-schema
                        example: '{"errorCode":1.1,"message":"sample message","requestId":"sample requestId","status":1.1,"timestamp":1.1}'
            "401": 
                description: |
                    OAuth签名不正确
                body: 
                    application/json: 
                        schema: error-schema
                        example: '{"errorCode":1.1,"message":"sample message","requestId":"sample requestId","status":1.1,"timestamp":1.1}'
            "403": 
                description: |
                    对资源的访问被拒绝。通常这意味着当前请求被限制。也可能是你没有访问此资源的权限
                body: 
                    application/json: 
                        schema: error-schema
                        example: '{"errorCode":1.1,"message":"sample message","requestId":"sample requestId","status":1.1,"timestamp":1.1}'
            "404": 
                description: |
                    资源未发现(例如：请求一个不存在的用户或URL)
                body: 
                    application/json: 
                        schema: error-schema
                        example: '{"errorCode":1.1,"message":"sample message","requestId":"sample requestId","status":1.1,"timestamp":1.1}'
            "405": 
                description: |
                    通常意味着你用了错误的http方法 (例如，Post接口却发送Get请求)
                body: 
                    application/json: 
                        schema: error-schema
                        example: '{"errorCode":1.1,"message":"sample message","requestId":"sample requestId","status":1.1,"timestamp":1.1}'
            "500": 
                description: |
                    在服务端有应用错误
                body: 
                    application/json: 
                        schema: error-schema
                        example: '{"errorCode":1.1,"message":"sample message","requestId":"sample requestId","status":1.1,"timestamp":1.1}'
    post: 
        headers: 
            x-la-session: 
                displayName: x-la-session
                description: |
                    当前用户的sessionId
                type: string
                required: false
                repeat: false
            x-la-authorization: 
                displayName: x-la-authorization
                description: |
                    使用 oauth2.0 的方式获取access_token
                type: string
                required: false
                repeat: false
            x-la-format: 
                displayName: x-la-format
                description: |
                    自定义header字段，标识响应结果的格式。 枚举类型：[json]
                type: string
                required: false
                repeat: false
        body: 
            application/json: 
                schema: topic
                example: '{"id":"sample id","title":"sample title","image":"sample image","desc":"sample desc","status":"sample status"}'
        responses: 
            "200": 
                description: ok
                body: 
                    application/json: 
                        schema: update
                        example: '{"updateObjectId":1,"result":{"updateResultEnum":false},"updateTime":"sample updateTime"}'
            "201": 
                description: |
                    创建或替换一条记录的请求成功. 当返回201时，Location头字段通常跟随返回
            "400": 
                description: |
                    请求格式不正确
                body: 
                    application/json: 
                        schema: error-schema
                        example: '{"errorCode":1.1,"message":"sample message","requestId":"sample requestId","status":1.1,"timestamp":1.1}'
            "401": 
                description: |
                    OAuth签名不正确
                body: 
                    application/json: 
                        schema: error-schema
                        example: '{"errorCode":1.1,"message":"sample message","requestId":"sample requestId","status":1.1,"timestamp":1.1}'
            "403": 
                description: |
                    对资源的访问被拒绝。通常这意味着当前请求被限制。也可能是你没有访问此资源的权限
                body: 
                    application/json: 
                        schema: error-schema
                        example: '{"errorCode":1.1,"message":"sample message","requestId":"sample requestId","status":1.1,"timestamp":1.1}'
            "404": 
                description: |
                    资源未发现(例如：请求一个不存在的用户或URL)
                body: 
                    application/json: 
                        schema: error-schema
                        example: '{"errorCode":1.1,"message":"sample message","requestId":"sample requestId","status":1.1,"timestamp":1.1}'
            "405": 
                description: |
                    通常意味着你用了错误的http方法 (例如，Post接口却发送Get请求)
                body: 
                    application/json: 
                        schema: error-schema
                        example: '{"errorCode":1.1,"message":"sample message","requestId":"sample requestId","status":1.1,"timestamp":1.1}'
            "500": 
                description: |
                    在服务端有应用错误
                body: 
                    application/json: 
                        schema: error-schema
                        example: '{"errorCode":1.1,"message":"sample message","requestId":"sample requestId","status":1.1,"timestamp":1.1}'
/topics/{topic_id}/~/posts{field_selectors}: 
    uriParameters: 
        field_selectors: 
            displayName: field_selectors
            description: |
                很多资源允许你指定想要返回的字段。我们称这种语法结构为字段选择器。通过准确的指出你需要的信息，我们可以优化返回结果花费的时间。
                这样也能减少传输的数据。这两点让我们的APIs快速且高效，这是任何一个web应用程序的关键点，对于其他任何依赖外部API的人来说更是如此。
                
                Example
                --------
                如果想要获得people先关的id,first-name,last-name,industry可以这样使用:
                  `http://api.startupsass.com/v1/people/~:(id,first-name,last-name,industry)`
                
                或者:
                  `http://api.startupsass.com/v1/people/~/connections:(id,first-name,last-name,industry)`
                
                字段选择器可以选择成员对象中的字段:
                  `http://api.startupsass.com/v1/people/~/connections:(id,first-name,last-name,positions:(title))`
            type: string
            required: false
            repeat: false
        topic_id: 
            displayName: topic_id
            type: string
            required: false
            repeat: false
    get: 
        headers: 
            x-la-authorization: 
                displayName: x-la-authorization
                description: |
                    使用 oauth2.0 的方式获取access_token
                type: string
                required: false
                repeat: false
            x-la-format: 
                displayName: x-la-format
                description: |
                    自定义header字段，标识响应结果的格式。 枚举类型：[json]
                type: string
                required: false
                repeat: false
            x-la-app-key: 
                displayName: x-la-app-key
                description: |
                    系统分配的app_key
                type: string
                required: false
                repeat: false
            x-la-sign-method: 
                displayName: x-la-sign-method
                description: |
                    系统参数签名方式
                type: string
                required: false
                repeat: false
        queryParameters: 
            count: 
                displayName: count
                description: Maximum
                type: integer
                required: false
                repeat: false
                example: "10"
            start: 
                displayName: start
                description: The offset by which to start Network Update pagination
                type: integer
                required: false
                repeat: false
                example: "0"
            sign: 
                displayName: sign
                description: |
                    经过校验后生成值
                type: string
                required: false
                repeat: false
        responses: 
            "200": 
                description: |
                    请求成功
                body: 
                    application/json: 
                        schema: posts
                        example: "{}"
            "400": 
                description: |
                    请求格式不正确
                body: 
                    application/json: 
                        schema: error-schema
                        example: '{"errorCode":1.1,"message":"sample message","requestId":"sample requestId","status":1.1,"timestamp":1.1}'
            "401": 
                description: |
                    OAuth签名不正确
                body: 
                    application/json: 
                        schema: error-schema
                        example: '{"errorCode":1.1,"message":"sample message","requestId":"sample requestId","status":1.1,"timestamp":1.1}'
            "403": 
                description: |
                    对资源的访问被拒绝。通常这意味着当前请求被限制。也可能是你没有访问此资源的权限
                body: 
                    application/json: 
                        schema: error-schema
                        example: '{"errorCode":1.1,"message":"sample message","requestId":"sample requestId","status":1.1,"timestamp":1.1}'
            "404": 
                description: |
                    资源未发现(例如：请求一个不存在的用户或URL)
                body: 
                    application/json: 
                        schema: error-schema
                        example: '{"errorCode":1.1,"message":"sample message","requestId":"sample requestId","status":1.1,"timestamp":1.1}'
            "405": 
                description: |
                    通常意味着你用了错误的http方法 (例如，Post接口却发送Get请求)
                body: 
                    application/json: 
                        schema: error-schema
                        example: '{"errorCode":1.1,"message":"sample message","requestId":"sample requestId","status":1.1,"timestamp":1.1}'
            "500": 
                description: |
                    在服务端有应用错误
                body: 
                    application/json: 
                        schema: error-schema
                        example: '{"errorCode":1.1,"message":"sample message","requestId":"sample requestId","status":1.1,"timestamp":1.1}'
/topics/{topic_id}/~/follow: 
    uriParameters: 
        topic_id: 
            displayName: topic_id
            type: string
            required: false
            repeat: false
    post: 
        headers: 
            x-la-session: 
                displayName: x-la-session
                description: |
                    当前用户的sessionId
                type: string
                required: false
                repeat: false
            x-la-authorization: 
                displayName: x-la-authorization
                description: |
                    使用 oauth2.0 的方式获取access_token
                type: string
                required: false
                repeat: false
            x-la-format: 
                displayName: x-la-format
                description: |
                    自定义header字段，标识响应结果的格式。 枚举类型：[json]
                type: string
                required: false
                repeat: false
        body: 
            application/json: 
                schema: follow
                example: '{"topicId":1}'
        responses: 
            "200": 
                description: |
                    请求成功
                body: 
                    application/json: 
                        schema: update
                        example: '{"updateObjectId":1,"result":{"updateResultEnum":false},"updateTime":"sample updateTime"}'
            "201": 
                description: |
                    创建或替换一条记录的请求成功. 当返回201时，Location头字段通常跟随返回
            "400": 
                description: |
                    请求格式不正确
                body: 
                    application/json: 
                        schema: error-schema
                        example: '{"errorCode":1.1,"message":"sample message","requestId":"sample requestId","status":1.1,"timestamp":1.1}'
            "401": 
                description: |
                    OAuth签名不正确
                body: 
                    application/json: 
                        schema: error-schema
                        example: '{"errorCode":1.1,"message":"sample message","requestId":"sample requestId","status":1.1,"timestamp":1.1}'
            "403": 
                description: |
                    对资源的访问被拒绝。通常这意味着当前请求被限制。也可能是你没有访问此资源的权限
                body: 
                    application/json: 
                        schema: error-schema
                        example: '{"errorCode":1.1,"message":"sample message","requestId":"sample requestId","status":1.1,"timestamp":1.1}'
            "404": 
                description: |
                    资源未发现(例如：请求一个不存在的用户或URL)
                body: 
                    application/json: 
                        schema: error-schema
                        example: '{"errorCode":1.1,"message":"sample message","requestId":"sample requestId","status":1.1,"timestamp":1.1}'
            "405": 
                description: |
                    通常意味着你用了错误的http方法 (例如，Post接口却发送Get请求)
                body: 
                    application/json: 
                        schema: error-schema
                        example: '{"errorCode":1.1,"message":"sample message","requestId":"sample requestId","status":1.1,"timestamp":1.1}'
            "500": 
                description: |
                    在服务端有应用错误
                body: 
                    application/json: 
                        schema: error-schema
                        example: '{"errorCode":1.1,"message":"sample message","requestId":"sample requestId","status":1.1,"timestamp":1.1}'
/topics/{topic_id}/~: 
    uriParameters: 
        topic_id: 
            displayName: topic_id
            type: string
            required: false
            repeat: false
/topics/{topic_id}: 
    uriParameters: 
        topic_id: 
            displayName: topic_id
            type: string
            required: false
            repeat: false
    get: 
        headers: 
            x-la-authorization: 
                displayName: x-la-authorization
                description: |
                    使用 oauth2.0 的方式获取access_token
                type: string
                required: false
                repeat: false
            x-la-format: 
                displayName: x-la-format
                description: |
                    自定义header字段，标识响应结果的格式。 枚举类型：[json]
                type: string
                required: false
                repeat: false
            x-la-app-key: 
                displayName: x-la-app-key
                description: |
                    系统分配的app_key
                type: string
                required: false
                repeat: false
            x-la-sign-method: 
                displayName: x-la-sign-method
                description: |
                    系统参数签名方式
                type: string
                required: false
                repeat: false
        queryParameters: 
            sign: 
                displayName: sign
                description: |
                    经过校验后生成值
                type: string
                required: false
                repeat: false
        responses: 
            "200": 
                description: |
                    请求成功
                body: 
                    application/json: 
                        schema: topic
                        example: '{"id":"sample id","title":"sample title","image":"sample image","desc":"sample desc","status":"sample status"}'
            "400": 
                description: |
                    请求格式不正确
                body: 
                    application/json: 
                        schema: error-schema
                        example: '{"errorCode":1.1,"message":"sample message","requestId":"sample requestId","status":1.1,"timestamp":1.1}'
            "401": 
                description: |
                    OAuth签名不正确
                body: 
                    application/json: 
                        schema: error-schema
                        example: '{"errorCode":1.1,"message":"sample message","requestId":"sample requestId","status":1.1,"timestamp":1.1}'
            "403": 
                description: |
                    对资源的访问被拒绝。通常这意味着当前请求被限制。也可能是你没有访问此资源的权限
                body: 
                    application/json: 
                        schema: error-schema
                        example: '{"errorCode":1.1,"message":"sample message","requestId":"sample requestId","status":1.1,"timestamp":1.1}'
            "404": 
                description: |
                    资源未发现(例如：请求一个不存在的用户或URL)
                body: 
                    application/json: 
                        schema: error-schema
                        example: '{"errorCode":1.1,"message":"sample message","requestId":"sample requestId","status":1.1,"timestamp":1.1}'
            "405": 
                description: |
                    通常意味着你用了错误的http方法 (例如，Post接口却发送Get请求)
                body: 
                    application/json: 
                        schema: error-schema
                        example: '{"errorCode":1.1,"message":"sample message","requestId":"sample requestId","status":1.1,"timestamp":1.1}'
            "500": 
                description: |
                    在服务端有应用错误
                body: 
                    application/json: 
                        schema: error-schema
                        example: '{"errorCode":1.1,"message":"sample message","requestId":"sample requestId","status":1.1,"timestamp":1.1}'
    put: 
        headers: 
            x-la-session: 
                displayName: x-la-session
                description: |
                    当前用户的sessionId
                type: string
                required: false
                repeat: false
            x-la-authorization: 
                displayName: x-la-authorization
                description: |
                    使用 oauth2.0 的方式获取access_token
                type: string
                required: false
                repeat: false
            x-la-modified-since: 
                displayName: x-la-modified-since
                description: |
                    Value as a Unix time stamp of milliseconds since epoch.
                type: integer
                required: false
                repeat: false
                example: "1267401600000"
            x-la-modified: 
                displayName: x-la-modified
                description: |
                    Values are updated or new.
                type: string
                required: false
                repeat: false
            x-la-format: 
                displayName: x-la-format
                description: |
                    自定义header字段，标识响应结果的格式。 枚举类型：[json]
                type: string
                required: false
                repeat: false
        body: 
            application/json: 
                schema: topic
                example: '{"id":"sample id","title":"sample title","image":"sample image","desc":"sample desc","status":"sample status"}'
        responses: 
            "200": 
                description: |
                    请求成功
            "201": 
                description: |
                    创建或替换一条记录的请求成功. 当返回201时，Location头字段通常跟随返回
            "400": 
                description: |
                    请求格式不正确
            "401": 
                description: |
                    OAuth签名不正确
            "403": 
                description: |
                    对资源的访问被拒绝。通常这意味着当前请求被限制。也可能是你没有访问此资源的权限
            "404": 
                description: |
                    资源未发现(例如：请求一个不存在的用户或URL)
            "405": 
                description: |
                    通常意味着你用了错误的http方法 (例如，Post接口却发送Get请求)
            "500": 
                description: |
                    在服务端有应用错误
    patch: 
        headers: 
            x-la-session: 
                displayName: x-la-session
                description: |
                    当前用户的sessionId
                type: string
                required: false
                repeat: false
            x-la-authorization: 
                displayName: x-la-authorization
                description: |
                    使用 oauth2.0 的方式获取access_token
                type: string
                required: false
                repeat: false
            x-la-modified-since: 
                displayName: x-la-modified-since
                description: |
                    Value as a Unix time stamp of milliseconds since epoch.
                type: integer
                required: false
                repeat: false
                example: "1267401600000"
            x-la-modified: 
                displayName: x-la-modified
                description: |
                    Values are updated or new.
                type: string
                required: false
                repeat: false
            x-la-format: 
                displayName: x-la-format
                description: |
                    自定义header字段，标识响应结果的格式。 枚举类型：[json]
                type: string
                required: false
                repeat: false
        body: 
            application/json: 
                schema: topic
                example: '{"id":"sample id","title":"sample title","image":"sample image","desc":"sample desc","status":"sample status"}'
        responses: 
            "200": 
                description: |
                    请求成功
            "201": 
                description: |
                    创建或替换一条记录的请求成功. 当返回201时，Location头字段通常跟随返回
            "400": 
                description: |
                    请求格式不正确
            "401": 
                description: |
                    OAuth签名不正确
            "403": 
                description: |
                    对资源的访问被拒绝。通常这意味着当前请求被限制。也可能是你没有访问此资源的权限
            "404": 
                description: |
                    资源未发现(例如：请求一个不存在的用户或URL)
            "405": 
                description: |
                    通常意味着你用了错误的http方法 (例如，Post接口却发送Get请求)
            "500": 
                description: |
                    在服务端有应用错误
/topics: 
/posts/~{field_selectors}: 
    uriParameters: 
        field_selectors: 
            displayName: field_selectors
            description: |
                很多资源允许你指定想要返回的字段。我们称这种语法结构为字段选择器。通过准确的指出你需要的信息，我们可以优化返回结果花费的时间。
                这样也能减少传输的数据。这两点让我们的APIs快速且高效，这是任何一个web应用程序的关键点，对于其他任何依赖外部API的人来说更是如此。
                
                Example
                --------
                如果想要获得people先关的id,first-name,last-name,industry可以这样使用:
                  `http://api.startupsass.com/v1/people/~:(id,first-name,last-name,industry)`
                
                或者:
                  `http://api.startupsass.com/v1/people/~/connections:(id,first-name,last-name,industry)`
                
                字段选择器可以选择成员对象中的字段:
                  `http://api.startupsass.com/v1/people/~/connections:(id,first-name,last-name,positions:(title))`
            type: string
            required: false
            repeat: false
    get: 
        headers: 
            x-la-authorization: 
                displayName: x-la-authorization
                description: |
                    使用 oauth2.0 的方式获取access_token
                type: string
                required: false
                repeat: false
            x-la-format: 
                displayName: x-la-format
                description: |
                    自定义header字段，标识响应结果的格式。 枚举类型：[json]
                type: string
                required: false
                repeat: false
            x-la-app-key: 
                displayName: x-la-app-key
                description: |
                    系统分配的app_key
                type: string
                required: false
                repeat: false
            x-la-sign-method: 
                displayName: x-la-sign-method
                description: |
                    系统参数签名方式
                type: string
                required: false
                repeat: false
        queryParameters: 
            keywords: 
                displayName: keywords
                type: string
                required: false
                repeat: false
            count: 
                displayName: count
                description: Maximum
                type: integer
                required: false
                repeat: false
                example: "10"
            start: 
                displayName: start
                description: The offset by which to start Network Update pagination
                type: integer
                required: false
                repeat: false
                example: "0"
            sign: 
                displayName: sign
                description: |
                    经过校验后生成值
                type: string
                required: false
                repeat: false
        responses: 
            "200": 
                description: |
                    请求成功
                body: 
                    application/json: 
                        schema: posts
                        example: "{}"
            "400": 
                description: |
                    请求格式不正确
                body: 
                    application/json: 
                        schema: error-schema
                        example: '{"errorCode":1.1,"message":"sample message","requestId":"sample requestId","status":1.1,"timestamp":1.1}'
            "401": 
                description: |
                    OAuth签名不正确
                body: 
                    application/json: 
                        schema: error-schema
                        example: '{"errorCode":1.1,"message":"sample message","requestId":"sample requestId","status":1.1,"timestamp":1.1}'
            "403": 
                description: |
                    对资源的访问被拒绝。通常这意味着当前请求被限制。也可能是你没有访问此资源的权限
                body: 
                    application/json: 
                        schema: error-schema
                        example: '{"errorCode":1.1,"message":"sample message","requestId":"sample requestId","status":1.1,"timestamp":1.1}'
            "404": 
                description: |
                    资源未发现(例如：请求一个不存在的用户或URL)
                body: 
                    application/json: 
                        schema: error-schema
                        example: '{"errorCode":1.1,"message":"sample message","requestId":"sample requestId","status":1.1,"timestamp":1.1}'
            "405": 
                description: |
                    通常意味着你用了错误的http方法 (例如，Post接口却发送Get请求)
                body: 
                    application/json: 
                        schema: error-schema
                        example: '{"errorCode":1.1,"message":"sample message","requestId":"sample requestId","status":1.1,"timestamp":1.1}'
            "500": 
                description: |
                    在服务端有应用错误
                body: 
                    application/json: 
                        schema: error-schema
                        example: '{"errorCode":1.1,"message":"sample message","requestId":"sample requestId","status":1.1,"timestamp":1.1}'
    post: 
        headers: 
            x-la-session: 
                displayName: x-la-session
                description: |
                    当前用户的sessionId
                type: string
                required: false
                repeat: false
            x-la-authorization: 
                displayName: x-la-authorization
                description: |
                    使用 oauth2.0 的方式获取access_token
                type: string
                required: false
                repeat: false
            x-la-format: 
                displayName: x-la-format
                description: |
                    自定义header字段，标识响应结果的格式。 枚举类型：[json]
                type: string
                required: false
                repeat: false
        body: 
            application/json: 
                schema: post
                example: '{"id":"sample id","createTime":"sample createTime","status":"sample status"}'
        responses: 
            "200": 
                description: |
                    请求成功
                body: 
                    application/json: 
                        schema: update
                        example: '{"updateObjectId":1,"result":{"updateResultEnum":false},"updateTime":"sample updateTime"}'
            "201": 
                description: |
                    创建或替换一条记录的请求成功. 当返回201时，Location头字段通常跟随返回
            "400": 
                description: |
                    请求格式不正确
                body: 
                    application/json: 
                        schema: error-schema
                        example: '{"errorCode":1.1,"message":"sample message","requestId":"sample requestId","status":1.1,"timestamp":1.1}'
            "401": 
                description: |
                    OAuth签名不正确
                body: 
                    application/json: 
                        schema: error-schema
                        example: '{"errorCode":1.1,"message":"sample message","requestId":"sample requestId","status":1.1,"timestamp":1.1}'
            "403": 
                description: |
                    对资源的访问被拒绝。通常这意味着当前请求被限制。也可能是你没有访问此资源的权限
                body: 
                    application/json: 
                        schema: error-schema
                        example: '{"errorCode":1.1,"message":"sample message","requestId":"sample requestId","status":1.1,"timestamp":1.1}'
            "404": 
                description: |
                    资源未发现(例如：请求一个不存在的用户或URL)
                body: 
                    application/json: 
                        schema: error-schema
                        example: '{"errorCode":1.1,"message":"sample message","requestId":"sample requestId","status":1.1,"timestamp":1.1}'
            "405": 
                description: |
                    通常意味着你用了错误的http方法 (例如，Post接口却发送Get请求)
                body: 
                    application/json: 
                        schema: error-schema
                        example: '{"errorCode":1.1,"message":"sample message","requestId":"sample requestId","status":1.1,"timestamp":1.1}'
            "500": 
                description: |
                    在服务端有应用错误
                body: 
                    application/json: 
                        schema: error-schema
                        example: '{"errorCode":1.1,"message":"sample message","requestId":"sample requestId","status":1.1,"timestamp":1.1}'
/posts/{postId}/~/like: 
    uriParameters: 
        postId: 
            displayName: postId
            type: string
            required: false
            repeat: false
    post: 
        headers: 
            x-la-format: 
                displayName: x-la-format
                description: |
                    自定义header字段，标识响应结果的格式。 枚举类型：[json]
                type: string
                required: false
                repeat: false
        body: 
            application/json: 
                schema: like-update
                example: '{"postId":1,"action":{}}'
        responses: 
            "200": 
                description: |
                    请求成功
                body: 
                    application/json: 
                        schema: update
                        example: '{"updateObjectId":1,"result":{"updateResultEnum":false},"updateTime":"sample updateTime"}'
            "201": 
                description: |
                    创建或替换一条记录的请求成功. 当返回201时，Location头字段通常跟随返回
            "400": 
                description: |
                    请求格式不正确
                body: 
                    application/json: 
                        schema: error-schema
                        example: '{"errorCode":1.1,"message":"sample message","requestId":"sample requestId","status":1.1,"timestamp":1.1}'
            "401": 
                description: |
                    OAuth签名不正确
                body: 
                    application/json: 
                        schema: error-schema
                        example: '{"errorCode":1.1,"message":"sample message","requestId":"sample requestId","status":1.1,"timestamp":1.1}'
            "403": 
                description: |
                    对资源的访问被拒绝。通常这意味着当前请求被限制。也可能是你没有访问此资源的权限
                body: 
                    application/json: 
                        schema: error-schema
                        example: '{"errorCode":1.1,"message":"sample message","requestId":"sample requestId","status":1.1,"timestamp":1.1}'
            "404": 
                description: |
                    资源未发现(例如：请求一个不存在的用户或URL)
                body: 
                    application/json: 
                        schema: error-schema
                        example: '{"errorCode":1.1,"message":"sample message","requestId":"sample requestId","status":1.1,"timestamp":1.1}'
            "405": 
                description: |
                    通常意味着你用了错误的http方法 (例如，Post接口却发送Get请求)
                body: 
                    application/json: 
                        schema: error-schema
                        example: '{"errorCode":1.1,"message":"sample message","requestId":"sample requestId","status":1.1,"timestamp":1.1}'
            "500": 
                description: |
                    在服务端有应用错误
                body: 
                    application/json: 
                        schema: error-schema
                        example: '{"errorCode":1.1,"message":"sample message","requestId":"sample requestId","status":1.1,"timestamp":1.1}'
/posts/{postId}/~/review: 
    uriParameters: 
        postId: 
            displayName: postId
            type: string
            required: false
            repeat: false
    post: 
        headers: 
            x-la-session: 
                displayName: x-la-session
                description: |
                    当前用户的sessionId
                type: string
                required: false
                repeat: false
            x-la-authorization: 
                displayName: x-la-authorization
                description: |
                    使用 oauth2.0 的方式获取access_token
                type: string
                required: false
                repeat: false
            x-la-format: 
                displayName: x-la-format
                description: |
                    自定义header字段，标识响应结果的格式。 枚举类型：[json]
                type: string
                required: false
                repeat: false
        body: 
            application/json: 
                schema: content
                example: '{"title":"sample title"}'
        responses: 
            "200": 
                description: |
                    请求成功
            "201": 
                description: |
                    创建或替换一条记录的请求成功. 当返回201时，Location头字段通常跟随返回
            "400": 
                description: |
                    请求格式不正确
            "401": 
                description: |
                    OAuth签名不正确
            "403": 
                description: |
                    对资源的访问被拒绝。通常这意味着当前请求被限制。也可能是你没有访问此资源的权限
            "404": 
                description: |
                    资源未发现(例如：请求一个不存在的用户或URL)
            "405": 
                description: |
                    通常意味着你用了错误的http方法 (例如，Post接口却发送Get请求)
            "500": 
                description: |
                    在服务端有应用错误
/posts/{postId}/~: 
    uriParameters: 
        postId: 
            displayName: postId
            type: string
            required: false
            repeat: false
/posts/{postId}: 
    uriParameters: 
        postId: 
            displayName: postId
            type: string
            required: false
            repeat: false
    get: 
        headers: 
            x-la-authorization: 
                displayName: x-la-authorization
                description: |
                    使用 oauth2.0 的方式获取access_token
                type: string
                required: false
                repeat: false
            x-la-format: 
                displayName: x-la-format
                description: |
                    自定义header字段，标识响应结果的格式。 枚举类型：[json]
                type: string
                required: false
                repeat: false
            x-la-app-key: 
                displayName: x-la-app-key
                description: |
                    系统分配的app_key
                type: string
                required: false
                repeat: false
            x-la-sign-method: 
                displayName: x-la-sign-method
                description: |
                    系统参数签名方式
                type: string
                required: false
                repeat: false
        queryParameters: 
            sign: 
                displayName: sign
                description: |
                    经过校验后生成值
                type: string
                required: false
                repeat: false
        responses: 
            "200": 
                description: |
                    请求成功
                body: 
                    application/json: 
                        schema: post
                        example: '{"id":"sample id","createTime":"sample createTime","status":"sample status"}'
            "400": 
                description: |
                    请求格式不正确
                body: 
                    application/json: 
                        schema: error-schema
                        example: '{"errorCode":1.1,"message":"sample message","requestId":"sample requestId","status":1.1,"timestamp":1.1}'
            "401": 
                description: |
                    OAuth签名不正确
                body: 
                    application/json: 
                        schema: error-schema
                        example: '{"errorCode":1.1,"message":"sample message","requestId":"sample requestId","status":1.1,"timestamp":1.1}'
            "403": 
                description: |
                    对资源的访问被拒绝。通常这意味着当前请求被限制。也可能是你没有访问此资源的权限
                body: 
                    application/json: 
                        schema: error-schema
                        example: '{"errorCode":1.1,"message":"sample message","requestId":"sample requestId","status":1.1,"timestamp":1.1}'
            "404": 
                description: |
                    资源未发现(例如：请求一个不存在的用户或URL)
                body: 
                    application/json: 
                        schema: error-schema
                        example: '{"errorCode":1.1,"message":"sample message","requestId":"sample requestId","status":1.1,"timestamp":1.1}'
            "405": 
                description: |
                    通常意味着你用了错误的http方法 (例如，Post接口却发送Get请求)
                body: 
                    application/json: 
                        schema: error-schema
                        example: '{"errorCode":1.1,"message":"sample message","requestId":"sample requestId","status":1.1,"timestamp":1.1}'
            "500": 
                description: |
                    在服务端有应用错误
                body: 
                    application/json: 
                        schema: error-schema
                        example: '{"errorCode":1.1,"message":"sample message","requestId":"sample requestId","status":1.1,"timestamp":1.1}'
    put: 
        headers: 
            x-la-session: 
                displayName: x-la-session
                description: |
                    当前用户的sessionId
                type: string
                required: false
                repeat: false
            x-la-authorization: 
                displayName: x-la-authorization
                description: |
                    使用 oauth2.0 的方式获取access_token
                type: string
                required: false
                repeat: false
            x-la-modified-since: 
                displayName: x-la-modified-since
                description: |
                    Value as a Unix time stamp of milliseconds since epoch.
                type: integer
                required: false
                repeat: false
                example: "1267401600000"
            x-la-modified: 
                displayName: x-la-modified
                description: |
                    Values are updated or new.
                type: string
                required: false
                repeat: false
            x-la-format: 
                displayName: x-la-format
                description: |
                    自定义header字段，标识响应结果的格式。 枚举类型：[json]
                type: string
                required: false
                repeat: false
        body: 
            application/json: 
                schema: post
                example: '{"id":"sample id","createTime":"sample createTime","status":"sample status"}'
        responses: 
            "200": 
                description: |
                    请求成功
            "201": 
                description: |
                    创建或替换一条记录的请求成功. 当返回201时，Location头字段通常跟随返回
            "400": 
                description: |
                    请求格式不正确
            "401": 
                description: |
                    OAuth签名不正确
            "403": 
                description: |
                    对资源的访问被拒绝。通常这意味着当前请求被限制。也可能是你没有访问此资源的权限
            "404": 
                description: |
                    资源未发现(例如：请求一个不存在的用户或URL)
            "405": 
                description: |
                    通常意味着你用了错误的http方法 (例如，Post接口却发送Get请求)
            "500": 
                description: |
                    在服务端有应用错误
    patch: 
        headers: 
            x-la-session: 
                displayName: x-la-session
                description: |
                    当前用户的sessionId
                type: string
                required: false
                repeat: false
            x-la-authorization: 
                displayName: x-la-authorization
                description: |
                    使用 oauth2.0 的方式获取access_token
                type: string
                required: false
                repeat: false
            x-la-modified-since: 
                displayName: x-la-modified-since
                description: |
                    Value as a Unix time stamp of milliseconds since epoch.
                type: integer
                required: false
                repeat: false
                example: "1267401600000"
            x-la-modified: 
                displayName: x-la-modified
                description: |
                    Values are updated or new.
                type: string
                required: false
                repeat: false
            x-la-format: 
                displayName: x-la-format
                description: |
                    自定义header字段，标识响应结果的格式。 枚举类型：[json]
                type: string
                required: false
                repeat: false
        body: 
            application/json: 
                schema: post
                example: '{"id":"sample id","createTime":"sample createTime","status":"sample status"}'
        responses: 
            "200": 
                description: |
                    请求成功
            "201": 
                description: |
                    创建或替换一条记录的请求成功. 当返回201时，Location头字段通常跟随返回
            "400": 
                description: |
                    请求格式不正确
            "401": 
                description: |
                    OAuth签名不正确
            "403": 
                description: |
                    对资源的访问被拒绝。通常这意味着当前请求被限制。也可能是你没有访问此资源的权限
            "404": 
                description: |
                    资源未发现(例如：请求一个不存在的用户或URL)
            "405": 
                description: |
                    通常意味着你用了错误的http方法 (例如，Post接口却发送Get请求)
            "500": 
                description: |
                    在服务端有应用错误
/posts: 
